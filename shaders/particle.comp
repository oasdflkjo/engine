#version 460

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

// Input buffers
layout(std430, binding = 0) buffer InputPositions {
    vec2 positions_in[];
};

layout(std430, binding = 1) buffer InputVelocities {
    vec2 velocities_in[];
};

// Output buffers
layout(std430, binding = 2) buffer OutputPositions {
    vec2 positions_out[];
};

layout(std430, binding = 3) buffer OutputVelocities {
    vec2 velocities_out[];
};

uniform float deltaTime;
uniform vec2 mousePos;
uniform int particleCount;

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= particleCount) return;

    vec2 pos = positions_in[index];
    vec2 vel = velocities_in[index];

    // Combined acceleration and dampening
    vec2 direction = normalize(mousePos - pos);
    vel = vel * 0.9998 + direction * 2.5 * deltaTime;

    // Update position
    pos += vel * deltaTime;

    // Write to output buffers
    positions_out[index] = pos;
    velocities_out[index] = vel;
}