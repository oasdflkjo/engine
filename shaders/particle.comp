#version 430 core

layout(std430, binding = 0) buffer PositionsIn {
    vec2 positions_in[];
};

layout(std430, binding = 1) buffer VelocitiesIn {
    vec2 velocities_in[];
};

layout(std430, binding = 2) buffer VelocityMagsIn {
    float velocity_mags_in[];
};

layout(std430, binding = 3) buffer PositionsOut {
    vec2 positions_out[];
};

layout(std430, binding = 4) buffer VelocitiesOut {
    vec2 velocities_out[];
};

layout(std430, binding = 5) buffer VelocityMagsOut {
    float velocity_mags_out[];
};

uniform float delta_time;
uniform vec2 mouse_pos;
uniform int num_particles;

layout(local_size_x = 256) in;

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= num_particles) return;

    vec2 pos = positions_in[index];
    vec2 vel = velocities_in[index];

    // Update velocity
    vec2 direction = normalize(mouse_pos - pos);
    vel += direction * 2.5 * delta_time;
    vel *= 0.9998; // dampening

    // Update position
    pos += vel * delta_time;

    // Write outputs
    positions_out[index] = pos;
    velocities_out[index] = vel;
    velocity_mags_out[index] = length(vel);
}