#version 430
layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(std430, binding = 0) buffer Position {
    vec2 positions[];
};

layout(std430, binding = 1) buffer Velocity {
    vec2 velocities[];
};

layout(std430, binding = 2) buffer VelocityMagnitude {
    float velocityMags[];
};

uniform float delta_time;
uniform vec2 gravity_point;
uniform int num_particles;
uniform float attraction_strength;
uniform float time_scale;

void main() {
    uint global_id = gl_GlobalInvocationID.x + 
                    gl_GlobalInvocationID.y * (gl_NumWorkGroups.x * gl_WorkGroupSize.x);
                    
    if (global_id >= num_particles) return;

    // Update position with scaled time
    positions[global_id] += velocities[global_id] * delta_time * time_scale;
    
    // Simple attraction to gravity point with configurable strength
    vec2 direction = normalize(gravity_point - positions[global_id]);
    velocities[global_id] += direction * attraction_strength * delta_time * time_scale;
    
    // Simple dampening
    velocities[global_id] *= 0.9988;
    
    // Store velocity magnitude for rendering
    velocityMags[global_id] = length(velocities[global_id]);
}