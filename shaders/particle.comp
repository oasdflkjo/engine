#version 430 core

layout(std430, binding = 0) buffer Position {
    vec2 positions[];
};

layout(std430, binding = 1) buffer Velocity {
    vec2 velocities[];
};

layout(std430, binding = 2) buffer VelocityMagnitude {
    float velocityMags[];
};

uniform float delta_time;
uniform vec2 mouse_pos;
uniform int num_particles;

layout(local_size_x = 256) in;

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= num_particles) return;

    positions[index] += velocities[index] * delta_time;

    vec2 direction = normalize(mouse_pos - positions[index]);
    velocities[index] += direction * 2.5 * delta_time;

    float dampening = 0.9998;
    velocities[index] *= dampening;

    velocityMags[index] = length(velocities[index]);
}